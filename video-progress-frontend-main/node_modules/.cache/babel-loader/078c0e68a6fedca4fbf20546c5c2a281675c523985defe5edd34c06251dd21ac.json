{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Video-Progress-Tracker-main\\\\video-progress-frontend-main\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { VideoContext } from '../contexts/VideoContext';\nimport { AuthContext } from '../contexts/AuthContext';\nimport VideoCard from '../components/video/VideoCard';\nimport { getUserProgress } from '../services/progressService'; // Import progress service directly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    videos,\n    loading,\n    getVideos\n  } = useContext(VideoContext);\n  const {\n    user,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [videoProgress, setVideoProgress] = useState({});\n  const [loadingProgress, setLoadingProgress] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      await getVideos();\n    };\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  // Fetch progress for each video\n  useEffect(() => {\n    const fetchProgress = async () => {\n      if (videos.length > 0 && isAuthenticated) {\n        setLoadingProgress(true);\n        try {\n          const response = await getUserProgress(); // Use service function\n          console.log('Progress response:', response);\n          if (response.success && response.data) {\n            const progressMap = {};\n            response.data.forEach(progress => {\n              progressMap[progress.videoId] = progress;\n            });\n            setVideoProgress(progressMap);\n          }\n        } catch (error) {\n          console.error('Error fetching progress:', error);\n        } finally {\n          setLoadingProgress(false);\n        }\n      }\n    };\n    fetchProgress();\n  }, [videos, isAuthenticated]);\n\n  // Format time from seconds to MM:SS\n  const formatTime = seconds => {\n    if (!seconds || typeof seconds !== 'number') return '00:00';\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get videos with progress\n  const getVideosWithProgress = () => {\n    if (!videos || videos.length === 0) return [];\n    return videos.map(video => ({\n      ...video,\n      progress: videoProgress[video.id] || null\n    })).sort((a, b) => {\n      // Sort by progress (videos in progress first)\n      const aProgress = a.progress ? a.progress.progressPercentage : 0;\n      const bProgress = b.progress ? b.progress.progressPercentage : 0;\n\n      // If both have progress, sort by last watched\n      if (aProgress > 0 && bProgress > 0) {\n        const aLastWatched = a.progress.lastWatched ? new Date(a.progress.lastWatched) : new Date(0);\n        const bLastWatched = b.progress.lastWatched ? new Date(b.progress.lastWatched) : new Date(0);\n        return bLastWatched - aLastWatched; // Most recently watched first\n      }\n\n      // Otherwise, sort by progress percentage (descending)\n      return bProgress - aProgress;\n    });\n  };\n\n  // Get videos in progress (watched but not completed)\n  const getVideosInProgress = () => {\n    return getVideosWithProgress().filter(video => video.progress && video.progress.progressPercentage > 0 && video.progress.progressPercentage < 95).slice(0, 3); // Limit to 3 videos\n  };\n  const videosWithProgress = getVideosWithProgress();\n  const videosInProgress = getVideosInProgress();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [\"Welcome \", user && user.firstName ? user.firstName : user === null || user === void 0 ? void 0 : user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [videosInProgress.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Continue Watching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-list\",\n          children: videosInProgress.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-list-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/video/${video.id}`,\n              className: \"video-list-link\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-thumbnail-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: video.thumbnail || 'https://via.placeholder.com/240x135',\n                  alt: video.title,\n                  className: \"video-thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"video-duration\",\n                  children: formatTime(video.duration)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"video-title\",\n                  children: video.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"video-progress-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar-fill\",\n                      style: {\n                        width: `${video.progress ? video.progress.progressPercentage : 0}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-text\",\n                    children: [Math.round(video.progress ? video.progress.progressPercentage : 0), \"% complete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"last-position\",\n                    children: [\"Resume at \", formatTime(video.progress ? video.progress.lastPosition : 0)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), videosWithProgress.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No videos available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-grid\",\n          children: videosWithProgress.map(video => /*#__PURE__*/_jsxDEV(VideoCard, {\n            video: video,\n            progress: video.progress\n          }, video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .dashboard-page {\n          padding: 1rem;\n        }\n\n        .dashboard-content {\n          margin-top: 2rem;\n        }\n\n        .dashboard-section {\n          margin-bottom: 2rem;\n        }\n\n        .video-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          gap: 1.5rem;\n        }\n\n        .video-list {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n\n        .video-list-item {\n          background-color: #f5f5f5;\n          border-radius: 8px;\n          overflow: hidden;\n          transition: transform 0.2s;\n        }\n\n        .video-list-item:hover {\n          transform: translateY(-3px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        }\n\n        .video-list-link {\n          display: flex;\n          text-decoration: none;\n          color: inherit;\n          padding: 1rem;\n        }\n\n        .video-thumbnail-container {\n          position: relative;\n          width: 240px;\n          min-width: 240px;\n          height: 135px;\n          border-radius: 4px;\n          overflow: hidden;\n        }\n\n        .video-thumbnail {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n        .video-duration {\n          position: absolute;\n          bottom: 8px;\n          right: 8px;\n          background-color: rgba(0, 0, 0, 0.7);\n          color: white;\n          padding: 2px 6px;\n          border-radius: 3px;\n          font-size: 0.8rem;\n        }\n\n        .video-info {\n          margin-left: 1rem;\n          flex-grow: 1;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .video-title {\n          margin-top: 0;\n          margin-bottom: 0.5rem;\n          font-size: 1.2rem;\n        }\n\n        .video-progress-container {\n          margin-top: auto;\n        }\n\n        .progress-bar {\n          height: 6px;\n          background-color: #e0e0e0;\n          border-radius: 3px;\n          overflow: hidden;\n          margin-bottom: 0.5rem;\n        }\n\n        .progress-bar-fill {\n          height: 100%;\n          background-color: #3f51b5;\n          border-radius: 3px;\n        }\n\n        .progress-text {\n          font-size: 0.9rem;\n          color: #666;\n        }\n\n        .last-position {\n          font-size: 0.9rem;\n          color: #3f51b5;\n          margin-top: 0.25rem;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"j/G7Wi7dHRoxWUR5SPILZwOUGBQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useContext","useState","Link","VideoContext","AuthContext","VideoCard","getUserProgress","jsxDEV","_jsxDEV","Dashboard","_s","videos","loading","getVideos","user","isAuthenticated","videoProgress","setVideoProgress","loadingProgress","setLoadingProgress","fetchData","fetchProgress","length","response","console","log","success","data","progressMap","forEach","progress","videoId","error","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getVideosWithProgress","map","video","id","sort","a","b","aProgress","progressPercentage","bProgress","aLastWatched","lastWatched","Date","bLastWatched","getVideosInProgress","filter","slice","videosWithProgress","videosInProgress","firstName","username","to","src","thumbnail","alt","title","duration","style","width","round","lastPosition","jsx","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Video-Progress-Tracker-main/video-progress-frontend-main/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { VideoContext } from '../contexts/VideoContext';\nimport { AuthContext } from '../contexts/AuthContext';\nimport VideoCard from '../components/video/VideoCard';\nimport { getUserProgress } from '../services/progressService'; // Import progress service directly\n\nconst Dashboard = () => {\n  const { videos, loading, getVideos } = useContext(VideoContext);\n  const { user, isAuthenticated } = useContext(AuthContext);\n  const [videoProgress, setVideoProgress] = useState({});\n  const [loadingProgress, setLoadingProgress] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getVideos();\n    };\n\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  // Fetch progress for each video\n  useEffect(() => {\n    const fetchProgress = async () => {\n      if (videos.length > 0 && isAuthenticated) {\n        setLoadingProgress(true);\n        try {\n          const response = await getUserProgress(); // Use service function\n          console.log('Progress response:', response);\n\n          if (response.success && response.data) {\n            const progressMap = {};\n            response.data.forEach(progress => {\n              progressMap[progress.videoId] = progress;\n            });\n            setVideoProgress(progressMap);\n          }\n        } catch (error) {\n          console.error('Error fetching progress:', error);\n        } finally {\n          setLoadingProgress(false);\n        }\n      }\n    };\n\n    fetchProgress();\n  }, [videos, isAuthenticated]);\n\n  // Format time from seconds to MM:SS\n  const formatTime = (seconds) => {\n    if (!seconds || typeof seconds !== 'number') return '00:00';\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  // Get videos with progress\n  const getVideosWithProgress = () => {\n    if (!videos || videos.length === 0) return [];\n\n    return videos.map(video => ({\n      ...video,\n      progress: videoProgress[video.id] || null\n    })).sort((a, b) => {\n      // Sort by progress (videos in progress first)\n      const aProgress = a.progress ? a.progress.progressPercentage : 0;\n      const bProgress = b.progress ? b.progress.progressPercentage : 0;\n\n      // If both have progress, sort by last watched\n      if (aProgress > 0 && bProgress > 0) {\n        const aLastWatched = a.progress.lastWatched ? new Date(a.progress.lastWatched) : new Date(0);\n        const bLastWatched = b.progress.lastWatched ? new Date(b.progress.lastWatched) : new Date(0);\n        return bLastWatched - aLastWatched; // Most recently watched first\n      }\n\n      // Otherwise, sort by progress percentage (descending)\n      return bProgress - aProgress;\n    });\n  };\n\n  // Get videos in progress (watched but not completed)\n  const getVideosInProgress = () => {\n    return getVideosWithProgress().filter(video =>\n      video.progress &&\n      video.progress.progressPercentage > 0 &&\n      video.progress.progressPercentage < 95\n    ).slice(0, 3); // Limit to 3 videos\n  };\n\n  const videosWithProgress = getVideosWithProgress();\n  const videosInProgress = getVideosInProgress();\n\n  return (\n    <div className=\"dashboard-page\">\n      <h1>Dashboard</h1>\n      <p className=\"lead\">Welcome {user && user.firstName ? user.firstName : user?.username}</p>\n\n      <div className=\"dashboard-content\">\n        {videosInProgress.length > 0 && (\n          <div className=\"dashboard-section\">\n            <h2>Continue Watching</h2>\n            <div className=\"video-list\">\n              {videosInProgress.map(video => (\n                <div key={video.id} className=\"video-list-item\">\n                  <Link to={`/video/${video.id}`} className=\"video-list-link\">\n                    <div className=\"video-thumbnail-container\">\n                      <img\n                        src={video.thumbnail || 'https://via.placeholder.com/240x135'}\n                        alt={video.title}\n                        className=\"video-thumbnail\"\n                      />\n                      <div className=\"video-duration\">\n                        {formatTime(video.duration)}\n                      </div>\n                    </div>\n                    <div className=\"video-info\">\n                      <h3 className=\"video-title\">{video.title}</h3>\n                      <div className=\"video-progress-container\">\n                        <div className=\"progress-bar\">\n                          <div\n                            className=\"progress-bar-fill\"\n                            style={{\n                              width: `${video.progress ? video.progress.progressPercentage : 0}%`\n                            }}\n                          ></div>\n                        </div>\n                        <div className=\"progress-text\">\n                          {Math.round(video.progress ? video.progress.progressPercentage : 0)}% complete\n                        </div>\n                        <div className=\"last-position\">\n                          Resume at {formatTime(video.progress ? video.progress.lastPosition : 0)}\n                        </div>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"dashboard-section\">\n          <h2>All Videos</h2>\n\n          {videosWithProgress.length === 0 ? (\n            <p>No videos available.</p>\n          ) : (\n            <div className=\"video-grid\">\n              {videosWithProgress.map(video => (\n                <VideoCard\n                  key={video.id}\n                  video={video}\n                  progress={video.progress}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <style jsx=\"true\">{`\n        .dashboard-page {\n          padding: 1rem;\n        }\n\n        .dashboard-content {\n          margin-top: 2rem;\n        }\n\n        .dashboard-section {\n          margin-bottom: 2rem;\n        }\n\n        .video-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          gap: 1.5rem;\n        }\n\n        .video-list {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n\n        .video-list-item {\n          background-color: #f5f5f5;\n          border-radius: 8px;\n          overflow: hidden;\n          transition: transform 0.2s;\n        }\n\n        .video-list-item:hover {\n          transform: translateY(-3px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        }\n\n        .video-list-link {\n          display: flex;\n          text-decoration: none;\n          color: inherit;\n          padding: 1rem;\n        }\n\n        .video-thumbnail-container {\n          position: relative;\n          width: 240px;\n          min-width: 240px;\n          height: 135px;\n          border-radius: 4px;\n          overflow: hidden;\n        }\n\n        .video-thumbnail {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n        .video-duration {\n          position: absolute;\n          bottom: 8px;\n          right: 8px;\n          background-color: rgba(0, 0, 0, 0.7);\n          color: white;\n          padding: 2px 6px;\n          border-radius: 3px;\n          font-size: 0.8rem;\n        }\n\n        .video-info {\n          margin-left: 1rem;\n          flex-grow: 1;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .video-title {\n          margin-top: 0;\n          margin-bottom: 0.5rem;\n          font-size: 1.2rem;\n        }\n\n        .video-progress-container {\n          margin-top: auto;\n        }\n\n        .progress-bar {\n          height: 6px;\n          background-color: #e0e0e0;\n          border-radius: 3px;\n          overflow: hidden;\n          margin-bottom: 0.5rem;\n        }\n\n        .progress-bar-fill {\n          height: 100%;\n          background-color: #3f51b5;\n          border-radius: 3px;\n        }\n\n        .progress-text {\n          font-size: 0.9rem;\n          color: #666;\n        }\n\n        .last-position {\n          font-size: 0.9rem;\n          color: #3f51b5;\n          margin-top: 0.25rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}